{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Xihai Ren's Personal Portfolio","text":"<p>Coding My Dream, Embracing New Horizons!</p> Welcome to my Portfolio! I Am Xihai Ren, a dedicated and experienced Software Developer, Data Analyst, and Project Manager. <p>Location: Ottawa, ON, Canada</p> View Profile View Projects Technical Skills <ul> <li>Programming Languages: Java, Python, Dart, PHP, JSP</li> <li>Web Development: JavaScript, HTML/CSS, jQuery, Vue, React</li> <li>Data Analysis: Data Modeling, ETL, Data Analysis and Visualization</li> <li>Data Tools: Informatica, Cognos, Weka, RapidMiner, Pivot Table</li> <li>Databases: SQL, Microsoft SQL Server, Oracle, PostgreSQL, MySQL, MongoDB, Redis</li> <li>Web Services: Webservice, RESTful Service (Microservices)</li> <li>Frameworks: Spring Boot, Spring MVC, Struts, Hibernate</li> <li>Middleware: WebLogic, Tomcat</li> <li>Messaging Systems: Kafka, IBM MQ</li> <li>DevOps Tools: Azure, Pipeline, Cloud, Docker, Jenkins, Git, GitHub, JIRA</li> <li>Operating Systems: Windows, Ubuntu, SUSE Linux, Mac</li> <li>Development Tools: Eclipse, Android Studio, NetBeans, Visual Studio Code, VMWare</li> </ul>"},{"location":"#_1","title":"Xihai Ren's Personal Portfolio","text":""},{"location":"#_2","title":"Xihai Ren's Personal Portfolio","text":""},{"location":"#_3","title":"Xihai Ren's Personal Portfolio","text":""},{"location":"about/","title":"About","text":"<p>This project is designed to...</p>"},{"location":"about/#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"contact/","title":"Contact","text":"<p>I'm always open to connecting! You can reach me through the following platforms:</p> <ul> <li>Email: ren00055@algonquinlive.com | renxihai@gmail.com</li> <li>GitHub: RyanRen2023</li> <li>LinkedIn: Xihai Ren</li> </ul>"},{"location":"license/","title":"License","text":"<p>This project is licensed under the MIT License. See the LICENSE file for more information.</p>"},{"location":"profile/","title":"Xihai Ren","text":""},{"location":"profile/#about_me","title":"About Me","text":"<p>I am Xihai Ren, a dedicated and experienced Software Developer, Data Analyst, and Project Manager. With over 10 years of experience in the software industry, I specialize in Java development and data analysis. I am currently enrolled in the Computer Programming program at Algonquin College, where I have achieved a GPA of 3.96 and have been named to the Dean\u2019s Honours List twice. My educational background and professional experience have equipped me with a solid understanding of the full software development life cycle, agile methodologies, and effective communication skills.</p>"},{"location":"profile/#education","title":"Education","text":"<p>1. Diploma in Computer Programming:</p> <ul> <li> <p>Sept 2023 ~ Present</p> </li> <li> <p>Algonquin College, </p> </li> <li> <p>Ottawa ON, Canada</p> <ul> <li>Honors: Dean\u2019s Honours List.</li> <li>Current GPA: 3.96 out of 4.0</li> </ul> </li> </ul> <p>2. Bachelor\u2019s degree in Computer Science and Technology: </p> <ul> <li> <p>Sept 2003 ~ June 2007 </p> </li> <li> <p>Shijiazhuang University of Economics, </p> </li> <li> <p>China</p> </li> </ul>"},{"location":"profile/#work_experience","title":"Work Experience","text":""},{"location":"profile/#software_engineer","title":"Software Engineer","text":"<ul> <li>Nov 2011 ~ Sep 2022 </li> <li> <p>PICC, Beijing, China </p> </li> <li> <p>Held positions in both the Data Center and Software Development Center. </p> </li> <li> <p>Served as a:</p> <ul> <li>Data Developer</li> <li>Software Developer </li> <li>Technical Manager</li> <li>Project Manager</li> </ul> </li> </ul>"},{"location":"profile/#java_developer","title":"Java Developer","text":"<ul> <li> <p>Oct 2009 ~ Nov 2011 </p> </li> <li> <p>LongTop Group, Beijing, China</p> </li> </ul>"},{"location":"profile/#junior_java_developer","title":"Junior Java Developer","text":"<ul> <li>Jul 2007 ~ Oct 2009 </li> <li>Xinnoge, Beijing, China</li> </ul>"},{"location":"profile/#_1","title":"Profile","text":""},{"location":"profile/#_2","title":"Profile","text":""},{"location":"profile/#_3","title":"Profile","text":""},{"location":"projects/","title":"Xihai Ren - Projects","text":""},{"location":"projects/#featured_projects","title":"Featured Projects","text":""},{"location":"projects/#1_agricultural_insurance_comprehensive_information_platform","title":"1. Agricultural Insurance Comprehensive Information Platform","text":"<p>Description: This platform is the core business platform for agricultural insurance, including core business functions such as underwriting and claims settlement. The platform comprises core business modules, GIS modules, blockchain modules, and mobile modules. Technical Stack: - J2EE: Spring, Struts2, Hibernate, JSP - Microservice: Spring Boot, Vue, Cloud - Database: Oracle, PostgreSQL - Middleware: WebLogic, Redis, F5, Kafka, GIS (SuperMap), IBM-ILOG - Data Integration: Restful API, Webservice, Blockchain (Go + Fabric) - Agile: Iterative Development, CI/CD Role: Led the project, involving data modeling, ETL processes, metrics development, and data visualization.</p>"},{"location":"projects/#2_sales_personnel_management_system","title":"2. Sales Personnel Management System","text":"<p>Description: This system manages sales personnel, contracts, and policies, controlling sales range and commissions through data control services provided via data distribution and Restful APIs. Technical Stack: - J2EE: Spring, Struts2, Hibernate, JSP - Microservice: Spring Boot, Vue, Cloud - Database: Informix, PostgreSQL - Middleware: WebLogic, Redis, F5 - Data Service: Restful API, Webservice - Agile: Iterative Development, CI/CD Role: Managed the project, ensuring seamless data processing and effective management of sales policies and contracts.</p>"},{"location":"projects/#3_employee_performance_system","title":"3. Employee Performance System","text":"<p>Description: Based on employee operational data sourced from business systems, this system extracts data through ETL processes and calculates employee performance by writing metric algorithms and supporting system assessment plans. Technical Stack: - J2EE: Spring, Struts2, Hibernate, JSP - Database: Informix, Oracle, Teradata data warehouse - Middleware: WebLogic - Data Integration: ETL - Tools: Informatica, Cognos, Shell Role: Served as Technical Manager and Project Manager, overseeing project management, requirements communication, system architecture design and review, system maintenance, and customer service.</p>"},{"location":"projects/#4_business_analysis_platform_and_data_express_system","title":"4. Business Analysis Platform and Data Express System","text":"<p>Description: The Business Analysis Platform monitors the company\u2019s business performance metrics, with the Data Express System focusing on premium income and claims payout metrics. Technical Stack: - J2EE: Spring, Struts2, Hibernate, JSP - Database: Informix, Oracle, Teradata data warehouse - Middleware: WebLogic - Data Integration: ETL - Tools: Informatica, Cognos, Shell Role: Developed data system functions based on business requirements, developed data metrics, monitored system data accuracy, and provided personalized data service support.</p>"},{"location":"projects/#academic_projects","title":"Academic Projects","text":""},{"location":"projects/#1_static_web_application","title":"1. Static Web Application","text":"<p>Description: A personal portfolio that includes a homepage, resume page, projects page, and contact page. Technical Stack: HTML, CSS Role: Designed and developed the application to showcase personal achievements and skills.</p>"},{"location":"projects/#2_dynamic_web_application","title":"2. Dynamic Web Application","text":"<p>Description: A Task Management Application implemented with login and task management features. Technical Stack: HTML, CSS, JavaScript, PHP, MySQL Role: Developed the application to manage tasks effectively.</p>"},{"location":"projects/#3_business_intelligence_project","title":"3. Business Intelligence Project","text":"<p>Description: Based on the Cross-Industry Standard Process for Data Mining (CRISP-DM) methodology, using tools like Weka and RapidMiner to practice supervised and unsupervised algorithms. Technical Stack: Weka, RapidMiner Role: Practiced algorithms such as KNN, Decision Tree, and K-Means for classification and prediction, and used outlier detection algorithms like LOF to identify anomalies.</p> <p>Feel free to explore my portfolio to learn more about my work and expertise.</p> <p>\u00a9 2024 Xihai Ren</p>"},{"location":"studies/","title":"Mobile","text":"<ul> <li>Floor SQLite</li> </ul>"},{"location":"studies/#business_intellegencebi","title":"Business Intellegence(BI)","text":"<ul> <li>Association Rules</li> </ul>"},{"location":"BI/association_rules/","title":"Association Rule","text":""},{"location":"BI/association_rules/#1_introduction","title":"1. Introduction","text":"<p>Association rule learning is a rule-based machine learning method for discovering interesting relations between variables in large databases. It is commonly used in market basket analysis to identify sets of products that frequently co-occur in transactions.</p>"},{"location":"BI/association_rules/#2_key_concepts","title":"2. Key Concepts","text":""},{"location":"BI/association_rules/#21_itemset","title":"2.1 Itemset","text":"<ul> <li>Itemset: A collection of one or more items.</li> <li>Frequent Itemset: An itemset that appears frequently in the dataset.</li> </ul>"},{"location":"BI/association_rules/#22_support","title":"2.2 Support","text":"<ul> <li>Definition: Support of an itemset is the proportion of transactions in the dataset in which the itemset appears.</li> <li>Formula:    [   \\text{Support}(A) = \\frac{\\text{Number of transactions containing } A}{\\text{Total number of transactions}}   ]</li> </ul>"},{"location":"BI/association_rules/#23_confidence","title":"2.3 Confidence","text":"<ul> <li>Definition: Confidence of a rule is the proportion of the transactions containing X that also contain Y.</li> <li>Formula:   [   \\text{Confidence}(X \\rightarrow Y) = \\frac{\\text{Support}(X \\cup Y)}{\\text{Support}(X)}   ]</li> </ul>"},{"location":"BI/association_rules/#24_lift","title":"2.4 Lift","text":"<ul> <li>Definition: Lift is the ratio of the observed support to that expected if X and Y were independent.</li> <li>Formula:   [   \\text{Lift}(X \\rightarrow Y) = \\frac{\\text{Support}(X \\cup Y)}{\\text{Support}(X) \\times \\text{Support}(Y)}   ]</li> <li>Interpretation: </li> <li>Lift &gt; 1: Positive correlation between X and Y</li> <li>Lift &lt; 1: Negative correlation between X and Y</li> <li>Lift = 1: X and Y are independent</li> </ul>"},{"location":"BI/association_rules/#25_consequent","title":"2.5 Consequent","text":"<ul> <li>Definition: The item(s) found in the right-hand side of the rule.</li> </ul>"},{"location":"BI/association_rules/#26_antecedent","title":"2.6 Antecedent","text":"<ul> <li>Definition: The item(s) found in the left-hand side of the rule.</li> </ul>"},{"location":"BI/association_rules/#3_algorithm","title":"3. Algorithm","text":"<p>Common algorithms used for mining association rules include:</p>"},{"location":"BI/association_rules/#31_apriori","title":"3.1 Apriori","text":"<ul> <li>Apriori: A classic algorithm for frequent itemset mining and association rule learning over transactional databases.</li> </ul>"},{"location":"BI/association_rules/#32_eclat","title":"3.2 Eclat","text":"<ul> <li>Eclat: Stands for Equivalence Class Clustering and bottom-up Lattice Traversal, used for mining frequent itemsets.</li> </ul>"},{"location":"BI/association_rules/#33_fp-growth","title":"3.3 FP-Growth","text":"<ul> <li>FP-Growth: Frequent Pattern Growth algorithm is an efficient and scalable method for mining the complete set of frequent patterns.</li> </ul>"},{"location":"BI/association_rules/#4_metrics","title":"4. Metrics","text":"<ul> <li>Support Threshold: The minimum support required for an itemset to be considered frequent.</li> <li>Confidence Threshold: The minimum confidence required for a rule to be considered strong.</li> <li>Lift Threshold: The threshold for determining the strength of correlation between itemsets.</li> </ul>"},{"location":"BI/association_rules/#5_applications","title":"5. Applications","text":"<ul> <li>Market Basket Analysis: Identifying products that frequently co-occur in transactions.</li> <li>Recommendation Systems: Suggesting products to customers based on their purchase history.</li> <li>Fraud Detection: Identifying unusual patterns that may indicate fraudulent activity.</li> </ul>"},{"location":"BI/association_rules/#6_example","title":"6. Example","text":"<p>For a dataset of transactions, an example rule might be: - Rule: If a customer buys bread, they are likely to buy butter. - Support: 20% of transactions include both bread and butter. - Confidence: 70% of transactions that include bread also include butter. - Lift: The likelihood of buying butter when bread is bought is 1.5 times higher than buying butter independently.</p>"},{"location":"BI/association_rules/#7_summary","title":"7. Summary","text":"<p>Association rule mining is a powerful tool for discovering interesting relationships in large datasets. By understanding and applying key concepts such as support, confidence, and lift, valuable insights can be gained in various domains, from retail to healthcare.</p>"},{"location":"java/","title":"Index","text":"<p>Please see the project indexm for further details.</p>"},{"location":"mobile/floor_sqllite/","title":"Floor Database Example","text":"<p>This repository demonstrates how to use the Floor database in a Flutter application. Floor is an SQLite abstraction for Flutter, inspired by Room for Android.</p>"},{"location":"mobile/floor_sqllite/#1_setup_dependencies","title":"1. Setup Dependencies","text":"<p>Add the runtime dependency floor as well as the generator floor_generator to your pubspec.yaml. </p> <pre><code>dependencies:\n  flutter:\n    sdk: flutter\n  floor: ^1.4.0\n\ndev_dependencies:\n  floor_generator: ^1.4.0\n  build_runner: ^2.1.2\n\n</code></pre>"},{"location":"mobile/floor_sqllite/#2_create_an_entity","title":"2. Create an Entity\u00b6","text":"<pre><code>// entity/person.dart\n\nimport 'package:floor/floor.dart';\n\n@entity\nclass Person {\n  @primaryKey\n  final int id;\n\n  final String name;\n\n  Person(this.id, this.name);\n}\n\n</code></pre>"},{"location":"mobile/floor_sqllite/#3_create_a_dao_data_access_object","title":"3. Create a DAO (Data Access Object)\u00b6","text":"<pre><code>// dao/person_dao.dart\n\nimport 'package:floor/floor.dart';\n\n@dao\nabstract class PersonDao {\n  @Query('SELECT * FROM Person')\n  Future&lt;List&lt;Person&gt;&gt; findAllPersons();\n\n  @Query('SELECT * FROM Person WHERE id = :id')\n  Stream&lt;Person?&gt; findPersonById(int id);\n\n  @insert\n  Future&lt;void&gt; insertPerson(Person person);\n}\n\n</code></pre>"},{"location":"mobile/floor_sqllite/#4_create_the_database","title":"4. Create the Database\u00b6","text":"<pre><code>// database.dart\n\n// required package imports\nimport 'dart:async';\nimport 'package:floor/floor.dart';\nimport 'package:sqflite/sqflite.dart' as sqflite;\n\nimport 'dao/person_dao.dart';\nimport 'entity/person.dart';\n\npart 'database.g.dart'; // the generated code will be there\n\n@Database(version: 1, entities: [Person])\nabstract class AppDatabase extends FloorDatabase {\n  PersonDao get personDao;\n}\n\n</code></pre>"},{"location":"mobile/floor_sqllite/#5_run_the_code_generator","title":"5. Run the Code Generator\u00b6","text":"<pre><code>flutter packages pub run build_runner build\n</code></pre> <ol> <li>Use the Generated Code\u00b6</li> </ol> <pre><code>final database = await $FloorAppDatabase.databaseBuilder('app_database.db').build();\n\nfinal personDao = database.personDao;\nfinal person = Person(1, 'Frank');\n\nawait personDao.insertPerson(person);\nfinal result = await personDao.findPersonById(1);\n\n</code></pre>"},{"location":"mobile/floor_sqllite/#7_reference","title":"7. reference","text":"<p>For more detailed instructions, visit the official documentation: Floor Documentation</p>"},{"location":"projects/academic_projects/","title":"Academic Projects","text":""},{"location":"projects/academic_projects/#final_group_project_-_the_food_waste_reduction_platform","title":"Final Group Project - The Food Waste Reduction platform","text":"<p>The Food Waste Reduction platform is a waste management platform. With collaboration from restaurants, consumers, food suppliers, and charitable organizations, this platform promotes sustainability throughout the supply chain as well as efforts to reduce global hunger. This document explores the functionality of the application and provides insight into its layout.</p>"},{"location":"projects/academic_projects/#demonstration","title":"Demonstration","text":""},{"location":"projects/academic_projects/#final_group_project_airline_management_system","title":"Final Group Project: Airline Management System","text":"<p>This project is an Airline Management System designed to manage various aspects of an airline, including customers, airplanes, flights, and reservations. Each section of the application is handled by a different team member, ensuring a comprehensive and well-rounded development process.</p> <p>The main page of the application serves as the entry point and includes four buttons. Each button navigates to a different section of the project:</p> <ol> <li>Customer List Page</li> <li>Airplane List Page</li> <li>Flights List Page</li> <li>Reservation Page</li> </ol> <p></p> <p></p>"},{"location":"projects/academic_projects/#static_web_application","title":"Static Web Application","text":"<p>A personal portfolio includes a homepage, resume page, projects page, and contact page. This project was implemented using HTML and CSS.</p>"},{"location":"projects/academic_projects/#dynamic_web_application","title":"Dynamic Web Application","text":"<p>Task Management Application was implemented using HTML, CSS, JavaScript, PHP, and MySQL. This application includes features such as login and task management.</p>"},{"location":"projects/academic_projects/#business_intelligence","title":"Business Intelligence","text":"<ul> <li>Methodology: Gained proficiency in the Cross-Industry Standard Process for Data Mining (CRISP-DM) methodology, leveraging tools such as Weka and RapidMiner.</li> <li>Supervised Learning: Practiced supervised learning algorithms including K-Nearest Neighbors (KNN) and Decision Trees for tasks such as classification and regression.</li> <li>Unsupervised Learning: Applied unsupervised learning algorithms like K-Means clustering to uncover patterns and groupings within datasets.</li> <li>Anomaly Detection: Utilized outlier detection algorithms such as Local Outlier Factor (LOF) to identify anomalies and unusual data points in large datasets.</li> <li>Regression Analysis: Implemented linear regression techniques to model relationships between variables and predict outcomes based on historical data.</li> <li>Data Visualization: Created visualizations using tools like Power BI and Tableau to present data insights.</li> </ul>"},{"location":"projects/academic_projects/#database","title":"Database","text":"<p>The Spotify Streaming Data Management System is a robust application designed to manage and interact with extensive music streaming data. Utilizing Microsoft SQL Server for the database backend and Microsoft Access for the frontend, this system efficiently handles user data, playlists, albums, and subscription information.</p>"},{"location":"projects/academic_projects/#javaoop_design_patterns","title":"Java(OOP + Design Patterns)","text":"<p>Library Management System was developed as part of the CST8288 course at Algonquin College. The system manages various library events such as workshops, book launches, kids' stories, and movie nights. The project demonstrates the use of design patterns, logging, and database operations.</p>"},{"location":"projects/academic_projects/#assignments","title":"Assignments","text":"<ul> <li>Assignment 1</li> <li>CST8288 010 Assignment 1 Report</li> <li>Assignment 2</li> <li>This project is an assignment for the Library Management System (LMS), developed as part of the CST8288 course at Algonquin College. The system manages various library events such as workshops, book launches, kids' stories, and movie nights. The project demonstrates the use of design patterns, logging, and database operations.</li> </ul>"},{"location":"projects/academic_projects/#labs","title":"Labs","text":"<ul> <li>Lab 1: This project is an implementation of a Vehicle Management System using Object-Oriented Programming principles. It includes various types of vehicles and provides functionality to build, manage, and display these vehicles. The project demonstrates the use of design patterns such as Builder and Singleton.</li> <li>Lab 2: DAO Design Patterns<ul> <li>Objective:</li> <li>Demonstrate the Data Access Object (DAO) Design Pattern.</li> <li>Use the DAO pattern to consume a CSV file and update your database.</li> <li>Understand the importance of good input validation.</li> </ul> </li> </ul>"},{"location":"projects/academic_projects/#mobiledart_flutter_sqlite","title":"Mobile(Dart + Flutter + SQlite)","text":""},{"location":"projects/academic_projects/#week_3_lab","title":"Week 3 Lab","text":"<p>Week 3 Lab Repository</p> <p>Create a login page with two text fields. One is for \"Login name\" and the one below it for \"password\".</p>"},{"location":"projects/academic_projects/#week_4_lab","title":"Week 4 Lab","text":"<p>Week 4 Lab Repository</p> <p>Layouts by recreating this image on a page:</p>"},{"location":"projects/academic_projects/#week_5_lab","title":"Week 5 Lab","text":"<p>Week 5 Lab Repository</p> <p>Creating a second page for your app: Add a second page to your app called ProfilePage. Then when you use your login page, and your password is correct, navigate to your new page.</p>"},{"location":"projects/academic_projects/#week_6_lab","title":"Week 6 Lab","text":"<p>Week 6 Lab Repository</p> <p>ListViews: Create a \"To Do\" list application that lets users add items to a list. The user can type into a TextField and click \"Add\" which should then make the item in the List.</p>"},{"location":"projects/academic_projects/#week_8_lab","title":"Week 8 Lab","text":"<p>Week 8 Lab Repository</p> <p>Using Database with Flutter: This project demonstrates the use of a SQLite database in a Flutter application using the Floor package. The application allows users to manage a list of Todo items with the ability to add, view, and delete items. The data is securely stored using encrypted shared preferences.</p>"},{"location":"projects/academic_projects/#week_9_lab","title":"Week 9 Lab","text":"<p>Week 9 Lab Repository</p> <p>Responsive Layouts: This project demonstrates the implementation of a responsive layout in a Flutter application. The application adapts to different screen sizes to provide an optimal user experience on various devices. The Todo list application from the previous weeks is enhanced with a responsive layout that adjusts the display of the todo list and the detailed view of selected items based on the screen size.</p>"},{"location":"projects/academic_projects/#explore_more_of_my_projects_and_professional_journey_on_linkedin_and_github","title":"Explore more of my projects and professional journey on LinkedIn and GitHub","text":""},{"location":"projects/academic_projects/#_1","title":"Academic Projects","text":""},{"location":"projects/fwrp/","title":"Food Waste Reduction Platform","text":""},{"location":"projects/fwrp/#1_retailer_dashboard","title":"1. Retailer Dashboard","text":"<ul> <li>Description: This image shows the \"Retailer Dashboard\" page. The dashboard provides a summary of the retailer's profile and key statistics such as the total listed items, total sold items, total revenue, and total donated items. The page is designed to give retailers an overview of their food-related activities.</li> </ul>"},{"location":"projects/fwrp/#2_retailer_manage_inventory","title":"2. Retailer Manage Inventory","text":"<ul> <li>Description: This image displays the \"Manage Inventory\" page for retailers. Retailers can manage their food inventory, including viewing item names, quantities, expiration dates, prices, and discounts. The page provides options to edit or delete inventory items and includes a checkbox to filter items based on expiration dates.</li> </ul>"},{"location":"projects/fwrp/#3_retailer_surplus_food","title":"3. Retailer Surplus Food","text":"<ul> <li>Description: This image showcases the \"Identify Surplus Food\" page for retailers. Retailers can view a list of food items with details such as quantity, expiration date, and whether the item has been identified as surplus or declared as donated. The interface includes an \"Identify\" button for each item to mark it as surplus food.</li> </ul>"},{"location":"projects/fwrp/#4_retailer_view_feedback","title":"4. Retailer View Feedback","text":"<ul> <li>Description: This image depicts the \"Submitted Feedback\" page where retailers can view feedback left by consumers. Feedback is organized by food item and includes ratings and comments. This page helps retailers understand customer satisfaction with their products.</li> </ul>"},{"location":"projects/fwrp/#5_organization_dashboard","title":"5. Organization Dashboard","text":"<ul> <li>Description: This image displays the \"Organization Dashboard\" page. The dashboard provides organizations with a summary of their activities, including total claims and the most claimed food item. The interface is designed to help organizations track their impact on reducing food waste.</li> </ul>"},{"location":"projects/fwrp/#6_organization_claim_food","title":"6. Organization Claim Food","text":"<ul> <li>Description: This image illustrates the \"Claim Food\" page for organizations. Organizations can claim surplus food items by selecting them from the list. Each item displays relevant details such as quantity and expiration date, with a \"Claim\" button available for each item.</li> </ul>"},{"location":"projects/fwrp/#7_organization_feedback","title":"7. Organization Feedback","text":"<ul> <li>Description: This image represents the \"Feedback\" page for organizations. Organizations can submit feedback for specific food items by providing a rating and comments. The interface includes a dropdown menu to select the food item, a rating scale, and a text area for comments. Submitted feedback is displayed below.</li> </ul>"},{"location":"projects/fwrp/#8_consumer_dashboard","title":"8. Consumer Dashboard","text":"<ul> <li>Description: This image showcases the \"Consumer Dashboard\" page. The dashboard provides a summary of the consumer's activity, including total orders, total expenditure, total feedback given, and their favorite food item. The interface is designed to give consumers an overview of their interactions with the platform.</li> </ul>"},{"location":"projects/fwrp/#9_consumer_purchase","title":"9. Consumer Purchase","text":"<ul> <li>Description: This image illustrates the \"Purchase Surplus Food\" page for consumers. Consumers can purchase surplus food items listed on the platform. Each item is displayed with details such as quantity and expiration date, along with a \"Purchase\" button to complete the transaction.</li> </ul>"},{"location":"projects/fwrp/#10_consumer_notification","title":"10. Consumer Notification","text":"<ul> <li>Description: This image represents the \"Notifications\" page for consumers. Consumers can view notifications about surplus food items, including details such as item name, expiration date, and inventory. Notifications keep consumers informed about new surplus items available for purchase.</li> </ul>"},{"location":"projects/fwrp/#explore_more_of_my_projects_and_professional_journey_on_linkedin_and_github","title":"Explore more of my projects and professional journey on LinkedIn and GitHub","text":""},{"location":"projects/fwrp/#_1","title":"Food Waste Reduction Platform","text":""},{"location":"projects/work_projects/","title":"Projects","text":""},{"location":"projects/work_projects/#1_agricultural_insurance_comprehensive_information_platform","title":"1. Agricultural Insurance Comprehensive Information Platform","text":"<p>Role: Technical Manager and Project Manager</p> <p>Responsibilities: Project management, requirements analysis, system architecture design, system maintenance, and customer service.</p> <p>Description: This platform serves as the core business platform for agricultural insurance, including underwriting and claims settlement. It incorporates core business modules, GIS modules, blockchain modules, and mobile modules.</p> <p>Technical Stack:</p> <ul> <li>Backend: J2EE (Spring, Struts2, Hibernate, JSP)</li> <li>Microservices: Spring Boot, Vue, Cloud</li> <li>Database: Oracle, PostgreSQL</li> <li>Middleware: WebLogic, Radis, F5, Kafka, GIS (SuperMap), IBM-ILOG</li> <li>Integration: Restful API, Webservice, Blockchain (Go + Fabric)</li> <li>Methodology: Agile (Iterative Development, CI/CD)</li> </ul>"},{"location":"projects/work_projects/#2_sales_personnel_management_system","title":"2. Sales Personnel Management System","text":"<p>Role: Technical Manager and Project Manager</p> <p>Responsibilities: Project management, requirements analysis, system architecture design, system maintenance, and customer service.</p> <p>Description: Manages sales personnel, contracts, and policies to control sales range and commissions. Provides data control services through data distribution and Restful APIs.</p> <p>Technical Stack:</p> <ul> <li>Backend: J2EE (Spring, Struts2, Hibernate, JSP)</li> <li>Microservices: Spring Boot, Vue, Cloud</li> <li>Database: Informix, PostgreSQL</li> <li>Middleware: WebLogic, Radis, F5</li> <li>Service: Restful API, Webservice</li> <li>Methodology: Agile (Iterative Development, CI/CD)</li> </ul>"},{"location":"projects/work_projects/#3_employee_performance_system","title":"3. Employee Performance System","text":"<p>Role: Data Developer &amp; Software Developer</p> <p>Responsibilities: Develop data system functions, develop data metrics, monitor system data accuracy, provide personalized data service support.</p> <p>Description: Utilizes operational data from business systems through ETL processes to calculate employee performance, involving data modeling, ETL, metrics development, and data visualization.</p> <p>Technical Stack:</p> <ul> <li>Backend: J2EE (SpringMVC, Hibernate, JSP), PowerShell</li> <li>Database: Informix, Oracle</li> <li>Middleware: WebLogic, Radis, F5, Informatica</li> <li>Data Process:: Data collection, Data ETL,Data Modeling,Metrics development, and Data Visualization</li> </ul>"},{"location":"projects/work_projects/#4_business_analysis_platform_and_data_express_system","title":"4. Business Analysis Platform and Data Express System","text":"<p>Role: Data Developer</p> <p>Responsibilities: Develop data system functions, develop data metrics, monitor system data accuracy, provide personalized data service support.</p> <p>Description: Monitors the company\u2019s business performance metrics, with the Data Express System focusing on premium income and claims payout metrics, calculated daily.</p> <p>Technical Stack:</p> <ul> <li>Backend: J2EE (Spring, Struts2, Hibernate, JSP)</li> <li>Database: Informix, Oracle, Teradata data warehouse</li> <li>Middleware: WebLogic</li> <li>Integration: ETL</li> <li>Tools: Informatica, Cognos, Shell</li> </ul> <p>Explore more of my projects and professional journey on LinkedIn and GitHub.</p>"}]}